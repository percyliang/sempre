plugins {
  id 'maven'
  id 'application'
  id 'java'
}

group = 'com.github.timobaumann'

repositories {
  jcenter()
  mavenCentral()
  maven { url "https://www.jitpack.io" }
}

dependencies {
  compile group: 'com.google.guava', name: 'guava', version: '23.0'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonXmlVersion}"
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonXmlVersion}"
  compile group: 'jline', name: 'jline', version: '2.14.6'
  compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: "${corenlpVersion}"
  runtime group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: "${corenlpVersion}", classifier: 'models'
  runtime group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: "${corenlpVersion}", classifier: 'models-english'
  compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
  compile group: 'com.opencsv', name: 'opencsv', version: '4.1'
  compile group: 'com.github.percyliang', name: 'fig', version: 'master-SNAPSHOT'

  testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testRuntime(group: 'org.slf4j', name: 'slf4j-simple', version: "${slf4jVersion}") {
    // Software that depends on this project may have their own SLF4J implementation; avoid having more than one SLF4J implementation on the classpath
    transitive = false
  }
}



test {
  useTestNG()
  exclude 'edu/stanford/nlp/sempre/interactive/test/**'
  exclude 'edu/stanford/nlp/sempre/freebase/test/SparqlExecutorTest.class' // freebase web access is not available anymore
  exclude 'edu/stanford/nlp/sempre/overnight/test/SimpleWorldTest.class' // you need to copy overnight/unittest.db to lib/data/overnight/test/unittest.db for this to work.
}

// this will only run on POSIX-compatible OSs. Sorry Windows.
task extractModuleClasses(type:Exec) {
  commandLine 'bash', '-c', './scripts/extract-module-classes.rb && mkdir -p src/main/resources/edu/stanford/nlp/sempre/ && cp module-classes.txt src/main/resources/edu/stanford/nlp/sempre/'
}
run.dependsOn extractModuleClasses

distZip.enabled = false
distTar.enabled = false
configurations.archives.artifacts.removeAll{it.file =~ 'zip'}
configurations.archives.artifacts.removeAll{it.file =~ 'tar'}


mainClassName = 'edu.stanford.nlp.sempre.Main'
